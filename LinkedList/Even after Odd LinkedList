
/*
class LinkedListNode<T> {
	public T data;
	public LinkedListNode<T> next;

	public LinkedListNode(T data) {
		this.setData(data);
		this.next = null;
	}



}
* */
public class Solution {
	public static LinkedListNode<Integer> sortEvenOdd(LinkedListNode<Integer> head) {
        if(head == null)
            return head;
          LinkedListNode evenhead = null;
         LinkedListNode eventail = null;
         LinkedListNode oddhead = null;
         LinkedListNode oddtail = null;
        while(head != null)
        {
            if(head.data%2 == 0 && evenhead == null )
            {
                evenhead = head;
                eventail = head;
            }
            else if(head.data%2 !=0 && oddhead == null)
            {
                oddhead= head;
                oddtail=head;
            }
            else if(head.data%2 == 0)
            {
                eventail.next=head;
                eventail=head;
            }
            else if(head.data%2 != 0)
            {
                oddtail.next=head;
                oddtail=head;
            }
            head=head.next;
        }
        if(evenhead != null && oddtail != null){
        oddtail.next = evenhead;
        eventail.next = null;
        return oddhead;
        }
       else  if(oddhead == null)
        return evenhead;
        
        return oddhead;
	}
}
