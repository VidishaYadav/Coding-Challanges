import java.util.LinkedList;
public class Solution {

/*	TreeNode structure 
 * 
 * class TreeNode<T> {
		T data;
		ArrayList<TreeNode<T>> children;

		TreeNode(T data){
			this.data = data;
			children = new ArrayList<TreeNode<T>>();
		}
	}*/
	
	
	
	public static void printLevelWise(TreeNode<Integer> root){
		/* Your class should be named Solution 
 		 * Don't write main(). 
		 * Don't read input, it is passed as function argument. 
		 * Print output and don't return it. 
		 * Taking input is handled automatically. 
		 */
    LinkedList<TreeNode<Integer>> queue=new LinkedList<>();
  queue.addLast(root);
  queue.addLast(null);
  while(!queue.isEmpty()){
    TreeNode<Integer> node=queue.removeFirst();
    if(node==null)
    {
      if(queue.isEmpty())
        return;
      else
      {
        queue.addLast(null);
        System.out.println();
      }
    }
      else
      {
        System.out.print(node.data+" ");
        for(int i=0;i<node.children.size();i++)
        {
          queue.addLast(node.children.get(i));
        }
      }
    }
    
  }
}
